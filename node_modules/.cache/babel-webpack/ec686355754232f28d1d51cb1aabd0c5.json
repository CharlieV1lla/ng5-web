{"ast":null,"code":"import { gql } from 'apollo-angular';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"apollo-angular\";\nconst TOKENAUTH = gql`\n  mutation TokenAuth($username: String!, $password: String!) {\n    tokenAuth(username: $username, password: $password) {\n      token\n    }\n  }\n`;\nconst CREATEUSER = gql`\n  mutation CreateUser($username: String!, $email: String!, $password: String!) {\n    createUser(username: $username, email: $email, password: $password) {\n      user { \n        id\n        username\n        email\n      }\n    }\n  }\n  `;\nexport let GraphqlUsersService = /*#__PURE__*/(() => {\n  class GraphqlUsersService {\n    constructor(apollo) {\n      this.apollo = apollo;\n    }\n\n    tokenAuth(username, password) {\n      return this.apollo.mutate({\n        mutation: TOKENAUTH,\n        variables: {\n          username: username,\n          password: password\n        }\n      });\n    }\n\n    createUser(username, email, password) {\n      return this.apollo.mutate({\n        mutation: CREATEUSER,\n        variables: {\n          username: username,\n          email: email,\n          password: password\n        }\n      });\n    }\n\n  }\n\n  GraphqlUsersService.ɵfac = function GraphqlUsersService_Factory(t) {\n    return new (t || GraphqlUsersService)(i0.ɵɵinject(i1.Apollo));\n  };\n\n  GraphqlUsersService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: GraphqlUsersService,\n    factory: GraphqlUsersService.ɵfac,\n    providedIn: 'root'\n  });\n  return GraphqlUsersService;\n})();","map":null,"metadata":{},"sourceType":"module"}